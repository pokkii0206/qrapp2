{"version":3,"sources":["Components/AnounceCard.js","Components/QRbutton.js","Components/App.js","reportWebVitals.js","index.js"],"names":["usestyles","makeStyles","theme","root","flexGrow","position","paper","margin","maxHeight","width","overflow","list","display","flexDirection","AnounceCard","classes","className","Paper","List","ListItem","ListItemText","primary","useStyles","right","bottom","QRButton","OnButtonClick","Fab","color","aria-label","onClick","drawerWidth","appBar","marginLeft","drawer","flexShrink","drawerPaper","content","backgroundColor","palette","background","default","padding","spacing","toolbar","mixins","qr","PermanentDrawerLeft","useState","isQR","setQR","CssBaseline","Drawer","variant","anchor","Divider","map","text","index","button","ListItemIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"+UAYIA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACnCC,KAAM,CACFC,SAAU,EACVC,SAAU,YAEdC,MAAM,CAEFC,OAAQ,GACRC,UAAW,IACXC,MAAM,MACNC,SAAU,QAGdC,KAAM,CACFC,QAAS,OACTC,cAAe,cAKR,SAASC,IAEpB,IAAMC,EAAUf,IAChB,OACQ,qBAAKgB,UAAWD,EAAQZ,KAAxB,SACI,cAACc,EAAA,EAAD,CAAOD,UAAaD,EAAQT,MAA5B,SACI,eAACY,EAAA,EAAD,CAAMF,UAAWD,EAAQJ,KAAzB,UACI,cAACQ,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,CAAcC,QAAS,yOAEvB,cAACF,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,CAAcC,QAAS,yOAEvB,cAACF,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,CAAcC,QAAS,yOAEtB,cAACF,EAAA,EAAD,UACD,cAACC,EAAA,EAAD,CAAcC,QAAS,gP,8BC5CzCC,EAAYrB,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFE,SAAU,WACVkB,MAAO,GACPC,OAAO,QAIA,SAASC,EAAT,GACd,IADkCC,EACnC,EADmCA,cAEzBX,EAAUO,IAChB,OACI,8BACI,cAACK,EAAA,EAAD,CAAKC,MAAM,UAAUC,aAAW,MAAMb,UAAWD,EAAQZ,KAAM2B,QAASJ,EAAxE,SACC,cAAC,IAAD,Q,MCAb,IAAMK,EAAc,IAEdT,EAAYrB,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJS,QAAS,QAEXoB,OAAQ,CACNvB,MAAM,eAAD,OAAiBsB,EAAjB,OACLE,WAAYF,GAEdG,OAAQ,CACNzB,MAAOsB,EACPI,WAAY,GAEdC,YAAa,CACX3B,MAAOsB,GAETM,QAAS,CACPjC,SAAU,EACVkC,gBAAiBpC,EAAMqC,QAAQC,WAAWC,QAC1CC,QAASxC,EAAMyC,QAAQ,IAGzBC,QAAS1C,EAAM2C,OAAOD,QACtBE,GAAI,CACFvC,OAAO,YAuDIwC,EAlDc,WAE3B,IAAMhC,EAAUO,IADlB,EAEwB0B,oBAAS,GAFjC,mBAESC,EAFT,KAEeC,EAFf,KAOE,OAEE,sBAAKlC,UAAWD,EAAQZ,KAAxB,UACE,cAACgD,EAAA,EAAD,IAEA,eAACC,EAAA,EAAD,CACEpC,UAAWD,EAAQmB,OACnBmB,QAAQ,YACRtC,QAAS,CACPT,MAAOS,EAAQqB,aAEjBkB,OAAO,OANT,UAQE,qBAAKtC,UAAWD,EAAQ6B,UACxB,cAACW,EAAA,EAAD,IACA,cAACrC,EAAA,EAAD,UACG,CAAC,6CAAW,kCAAUsC,KAAI,SAACC,EAAMC,GAAP,OACzB,eAACvC,EAAA,EAAD,CAAUwC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UAAeF,EAAQ,IAAM,EAAI,cAAC,IAAD,IAAe,cAAC,IAAD,MAChD,cAACtC,EAAA,EAAD,CAAcC,QAASoC,MAFHA,QAM1B,cAACF,EAAA,EAAD,IACA,cAACrC,EAAA,EAAD,UACG,CAAC,eAAM,4BAAQsC,KAAI,SAACC,EAAMC,GAAP,OAClB,eAACvC,EAAA,EAAD,CAAUwC,QAAM,EAAhB,UACE,cAACC,EAAA,EAAD,UAAeF,EAAQ,IAAM,EAAI,cAAC,IAAD,IAAmB,cAAC,IAAD,MACpD,cAACtC,EAAA,EAAD,CAAcC,QAASoC,MAFHA,WAQ5B,uBAAMzC,UAAWD,EAAQsB,QAAzB,UACIY,EAAO,KAAM,cAACnC,EAAD,IACf,cAACW,EAAD,CAAUC,cAxChB,WACEwB,GAAOD,aC1CIY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.51d2c697.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport Paper from '@material-ui/core/Paper';\n\nlet usestyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        position: 'relative',\n    },\n    paper:{\n    \n        margin: 20,\n        maxHeight: 120,\n        width:'70%',\n        overflow: 'auto'\n    },\n\n    list: {\n        display: 'flex',\n        flexDirection: 'column'\n    }\n\n}));\n\nexport default function AnounceCard ()\n{\n    const classes = usestyles();\n    return (\n            <div className={classes.root}>\n                <Paper className = {classes.paper} >\n                    <List className={classes.list}>\n                        <ListItem>\n                        <ListItemText primary={\"・1/26（火）1４時30分ーー「鈴木様」が「地鎮祭」を「1/30（土）12:00~12:30」に申込されました\"} />\n                        </ListItem>\n                        <ListItem>\n                        <ListItemText primary={\"・1/26（火）1４時30分ーー「鈴木様」が「地鎮祭」を「1/30（土）12:00~12:30」に申込されました\"} />\n                        </ListItem>\n                        <ListItem>\n                        <ListItemText primary={\"・1/26（火）1４時30分ーー「鈴木様」が「地鎮祭」を「1/30（土）12:00~12:30」に申込されました\"} />\n                        </ListItem>\n                         <ListItem>\n                        <ListItemText primary={\"・1/26（火）1４時30分ーー「鈴木様」が「地鎮祭」を「1/30（土）12:00~12:30」に申込されました\"} />\n                        </ListItem>\n                            \n                    </List>\n            </Paper>\n            </div>\n       \n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        position: 'absolute',\n        right: 30,\n        bottom:30,\n    }\n}));\n\nexport default function QRButton ({OnButtonClick})\n{\n    const classes = useStyles();\n    return (\n        <div>\n            <Fab color=\"primary\" aria-label=\"add\" className={classes.root} onClick={OnButtonClick}>\n             <AddIcon />\n            </Fab>\n        </div>\n    );\n\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useState } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MailIcon from '@material-ui/icons/Mail';\n// Component\nimport AnounceCard from './AnounceCard.js';\nimport QRButton from './QRbutton.js';\nimport QRreader from './QRpage.js';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  qr: {\n    margin:'auto',\n  }\n  \n}));\n\nconst  PermanentDrawerLeft = () =>\n{\n  const classes = useStyles();\n  const [isQR, setQR] = useState(false);\n  function  handlebuttonclick (){\n    setQR(!isQR);\n  }\n\n  return (\n    \n    <div className={classes.root}>\n      <CssBaseline />\n      {/* サイドバー */}\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n          {['ダッシュボード', 'メッセージ',].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <HomeIcon /> : <MailIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        <List>\n          {['設定', 'お知らせ'].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>{index % 2 === 0 ? <SettingsIcon /> : <NotificationsIcon />}</ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      {/* コンテンツ */}\n      <main className={classes.content}>\n        { isQR ? null: <AnounceCard></AnounceCard>}\n        <QRButton OnButtonClick={handlebuttonclick}></QRButton>\n        </main>\n    </div>\n  );\n}\n\nexport default PermanentDrawerLeft;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}